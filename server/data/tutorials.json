{
  "modules": [
    {
      "id": "lab-setup",
      "title": "Complete Cybersecurity Lab Environment Setup",
      "description": "Comprehensive guide to building professional-grade cybersecurity labs with VirtualBox, Kali Linux, Windows, and network simulation tools",
      "category": "intro",
      "estimatedTime": 180,
      "icon": "fas fa-desktop",
      "tags": ["setup", "virtualization", "kali", "windows", "networking", "lab-building"],
      "lessons": [
        {
          "id": "virtualization-fundamentals",
          "title": "Virtualization Technology Fundamentals",
          "description": "Understanding virtualization concepts and architecture for cybersecurity labs",
          "type": "theory",
          "estimatedTime": 25,
          "content": [
            {
              "id": "virtualization-intro",
              "type": "text",
              "title": "What is Virtualization?",
              "content": "Virtualization is a technology that allows you to create multiple virtual environments from a single physical hardware system. In cybersecurity, virtualization provides isolated testing environments where you can safely practice penetration testing, malware analysis, and incident response without affecting your host system.\n\nKey benefits for cybersecurity professionals:\n• Isolated testing environments\n• Snapshot and rollback capabilities\n• Multiple OS testing scenarios\n• Cost-effective lab infrastructure\n• Safe malware analysis environments"
            },
            {
              "id": "hypervisor-types",
              "type": "text",
              "title": "Types of Hypervisors",
              "content": "**Type 1 Hypervisors (Bare Metal):**\n• VMware ESXi\n• Microsoft Hyper-V\n• Citrix XenServer\n• Run directly on physical hardware\n• Better performance and security\n\n**Type 2 Hypervisors (Hosted):**\n• VirtualBox\n• VMware Workstation\n• Parallels Desktop\n• Run on top of existing operating systems\n• Easier to set up for personal labs"
            },
            {
              "id": "lab-architecture",
              "type": "text",
              "title": "Cybersecurity Lab Architecture Design",
              "content": "A well-designed cybersecurity lab should include:\n\n**Attacking Systems:**\n• Kali Linux (primary penetration testing)\n• Parrot Security OS (alternative pentesting)\n• BlackArch Linux (specialized tools)\n\n**Target Systems:**\n• Windows 10/11 (modern endpoint)\n• Windows Server 2019/2022\n• Ubuntu/CentOS Linux servers\n• Vulnerable applications (DVWA, WebGoat)\n\n**Network Infrastructure:**\n• pfSense firewall\n• Windows Domain Controller\n• Network monitoring tools\n• IDS/IPS systems"
            },
            {
              "id": "hardware-requirements",
              "type": "info",
              "title": "Hardware Requirements for Professional Labs",
              "content": "**Minimum Requirements:**\n• 8GB RAM (16GB recommended)\n• 500GB available disk space\n• Dual-core processor with virtualization support\n• Intel VT-x or AMD-V technology enabled\n\n**Recommended Configuration:**\n• 32GB+ RAM for multiple VMs\n• 1TB+ SSD storage\n• Quad-core+ processor (i5/i7/Ryzen 5+)\n• Dedicated graphics card (optional)\n\n**Enterprise Setup:**\n• 64GB+ RAM\n• Multiple TB storage (SSD preferred)\n• Server-grade processors\n• 10Gb+ network connectivity"
            },
            {
              "id": "virtualization-security",
              "type": "text",
              "title": "Security Considerations for Virtual Labs",
              "content": "**Network Isolation Best Practices:**\n\nVirtualized cybersecurity labs must be properly isolated to prevent:\n• Malware from escaping to host systems\n• Unauthorized network access\n• Accidental damage to production systems\n• Legal issues from unauthorized testing\n\n**Isolation Techniques:**\n\n1. **Host-Only Networks**: Create completely isolated virtual networks\n2. **Internal Networks**: VMs can communicate only with each other\n3. **NAT Networks**: Controlled internet access through virtualization layer\n4. **VLANs**: Segment traffic using virtual LANs\n5. **Firewalls**: pfSense or similar for traffic control\n\n**Snapshot Management:**\n• Take snapshots before risky operations\n• Create clean baseline snapshots after initial setup\n• Regular snapshot cleanup to prevent storage issues\n• Document snapshot states for quick recovery\n\n**Legal and Ethical Guidelines:**\n• Only test systems you own or have explicit permission to test\n• Use intentionally vulnerable systems (Metasploitable, DVWA)\n• Document all activities for learning purposes\n• Follow responsible disclosure for any discoveries\n• Respect intellectual property and licensing terms"
            },
            {
              "id": "lab-topology-design",
              "type": "image",
              "title": "Professional Lab Network Topology",
              "content": "A well-designed cybersecurity lab requires careful network planning. The diagram below shows a comprehensive lab topology that includes all essential components for penetration testing, digital forensics, and incident response training.",
              "imageUrl": "https://images.unsplash.com/photo-1558494949-ef010cbdcc31?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2048&q=80",
              "imageAlt": "Network topology diagram showing interconnected security lab components"
            },
            {
              "id": "virtualization-performance",
              "type": "text",
              "title": "Optimizing Virtual Machine Performance",
              "content": "**CPU Optimization:**\n\n• **Enable Hardware Virtualization**: Ensure Intel VT-x or AMD-V is enabled in BIOS\n• **CPU Allocation**: Assign appropriate number of cores per VM (2-4 cores recommended)\n• **Avoid Over-allocation**: Don't assign more cores than physically available\n• **CPU Affinity**: Pin critical VMs to specific cores for consistent performance\n\n**Memory Management:**\n\n• **RAM Allocation**: Start with 2GB minimum, 4-8GB for full desktop environments\n• **Dynamic Memory**: Use when available to optimize resource usage\n• **Memory Ballooning**: Allows hypervisor to reclaim unused memory\n• **Swap Considerations**: Minimize swap usage for better performance\n\n**Storage Optimization:**\n\n• **SSD Storage**: Use SSDs for VM disk images whenever possible\n• **Disk Controllers**: Use paravirtualized controllers (VirtIO) for better performance\n• **Thin Provisioning**: Allocate disk space dynamically to save space\n• **Separate Disks**: Use separate physical disks for host OS and VMs\n\n**Network Performance:**\n\n• **Paravirtualized Network**: Use VirtIO network adapters\n• **Multiple NICs**: Separate management and lab traffic\n• **Jumbo Frames**: Enable for high-throughput applications\n• **Network Offloading**: Enable TCP/UDP checksum offloading"
            },
            {
              "id": "hypervisor-comparison",
              "type": "text",
              "title": "Comprehensive Hypervisor Comparison",
              "content": "**VMware Workstation Pro:**\n\n*Strengths:*\n• Excellent performance and stability\n• Advanced snapshot and cloning features\n• Superior 3D graphics support\n• Robust networking options\n• Unity mode for seamless integration\n• DirectX and OpenGL support\n\n*Weaknesses:*\n• Commercial license required ($249)\n• Resource intensive\n• Limited free features\n\n*Best For:* Professional pentesting, development, complex lab scenarios\n\n**Oracle VirtualBox:**\n\n*Strengths:*\n• Completely free and open source\n• Cross-platform compatibility\n• Extension pack for additional features\n• Good snapshot functionality\n• Active community support\n• Headless operation support\n\n*Weaknesses:*\n• Lower performance compared to VMware\n• Limited 3D acceleration\n• Less enterprise features\n\n*Best For:* Educational use, budget-conscious labs, learning environments\n\n**Microsoft Hyper-V:**\n\n*Strengths:*\n• Built into Windows Pro/Enterprise\n• Type-1 hypervisor performance\n• Excellent Windows VM support\n• PowerShell automation\n• Generation 2 VM features\n• Secure Boot support\n\n*Weaknesses:*\n• Windows-only host requirement\n• Limited Linux support\n• No nested virtualization on older hardware\n\n*Best For:* Windows-centric environments, enterprise labs, Azure integration\n\n**Proxmox VE:**\n\n*Strengths:*\n• Open source enterprise solution\n• Web-based management\n• KVM and LXC container support\n• Built-in backup and clustering\n• High availability features\n• RESTful API\n\n*Weaknesses:*\n• Steeper learning curve\n• Requires dedicated hardware\n• Limited desktop virtualization features\n\n*Best For:* Production labs, enterprise environments, cloud-like infrastructure"
            }
          ]
        },
        {
          "id": "virtualbox-installation",
          "title": "VirtualBox Installation and Configuration",
          "description": "Complete VirtualBox setup with advanced configuration for cybersecurity labs",
          "type": "hands-on",
          "estimatedTime": 30,
          "content": [
            {
              "id": "virtualbox-overview",
              "type": "text",
              "title": "Why VirtualBox for Cybersecurity?",
              "content": "Oracle VirtualBox is the preferred choice for cybersecurity education because:\n\n• **Free and Open Source**: No licensing costs\n• **Cross-platform**: Runs on Windows, macOS, Linux\n• **Extensive VM support**: Supports most operating systems\n• **Snapshot functionality**: Save and restore VM states\n• **Network simulation**: Create complex network topologies\n• **API access**: Automation and scripting capabilities\n• **Active community**: Large user base and documentation"
            },
            {
              "id": "download-installation",
              "type": "text",
              "title": "Download and Installation Process",
              "content": "**Step 1: Download VirtualBox**\nVisit: https://www.virtualbox.org/wiki/Downloads\n\n**For Windows:**\n• Download VirtualBox-x.x.x-Win.exe\n• Download Extension Pack (adds USB 3.0, RDP, encryption)\n\n**For macOS:**\n• Download VirtualBox-x.x.x-OSX.dmg\n• May require disabling System Integrity Protection\n\n**For Linux:**\n• Use package manager or download .deb/.rpm\n• Add Oracle repository for latest versions"
            },
            {
              "id": "linux-installation",
              "type": "command",
              "title": "Linux Installation Commands",
              "content": "# Ubuntu/Debian\nwget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -\necho \"deb [arch=amd64] https://download.virtualbox.org/virtualbox/debian $(lsb_release -cs) contrib\" | sudo tee /etc/apt/sources.list.d/virtualbox.list\nsudo apt update\nsudo apt install virtualbox-7.0 virtualbox-ext-pack",
              "copyable": true
            },
            {
              "id": "windows-installation",
              "type": "text",
              "title": "Windows Installation Steps",
              "content": "**Installation Process:**\n1. Run VirtualBox installer as Administrator\n2. Accept license agreement\n3. Choose installation directory\n4. Select components (all recommended)\n5. Install Oracle network drivers when prompted\n6. Complete installation and restart if required\n\n**Post-Installation:**\n1. Install Extension Pack for enhanced features\n2. Configure global settings\n3. Set default machine folder location\n4. Enable hardware virtualization in BIOS/UEFI"
            },
            {
              "id": "bios-virtualization",
              "type": "warning",
              "title": "Enabling Hardware Virtualization",
              "content": "**IMPORTANT**: Hardware virtualization must be enabled in BIOS/UEFI:\n\n**Intel Systems:**\n• Look for 'Intel VT-x' or 'Virtualization Technology'\n• Usually found in 'Advanced' or 'Security' settings\n\n**AMD Systems:**\n• Look for 'AMD-V' or 'SVM Mode'\n• Enable in 'Advanced CPU Features'\n\n**Access BIOS/UEFI:**\n• Restart computer\n• Press F2, F12, Del, or Esc during boot\n• Navigate to virtualization settings\n• Enable and save changes"
            },
            {
              "id": "virtualbox-configuration",
              "type": "text",
              "title": "Initial VirtualBox Configuration",
              "content": "**Global Settings Configuration:**\n\n1. **Default Machine Folder**: Set to dedicated drive with sufficient space\n2. **Host Key**: Configure host key combination (default: Right Ctrl)\n3. **Update Settings**: Enable automatic update checks\n4. **Language**: Set preferred interface language\n\n**Network Configuration:**\n1. Create Host-Only networks for isolated lab environments\n2. Configure NAT networks for internet access\n3. Set up Internal networks for VM-to-VM communication\n\n**Storage Configuration:**\n1. Create dedicated folders for VM files\n2. Consider SSD storage for better performance\n3. Plan storage allocation for multiple VMs"
            }
          ]
        },
        {
          "id": "kali-linux-setup",
          "title": "Kali Linux Virtual Machine Setup",
          "description": "Complete Kali Linux installation and configuration for penetration testing",
          "type": "hands-on",
          "estimatedTime": 45,
          "content": [
            {
              "id": "kali-overview",
              "type": "text",
              "title": "Kali Linux: The Penetration Testing Distribution",
              "content": "Kali Linux is a Debian-based Linux distribution specifically designed for digital forensics and penetration testing. Maintained by Offensive Security, it includes 600+ pre-installed security tools.\n\n**Key Features:**\n• 600+ penetration testing tools\n• Regular security updates\n• Multi-platform support (x86, x64, ARM)\n• Live boot capability\n• Forensics mode\n• Custom kernel with wireless injection patches\n• Complete tool documentation"
            },
            {
              "id": "kali-download",
              "type": "text",
              "title": "Downloading Kali Linux",
              "content": "**Download Options:**\n\n**Pre-built VirtualBox Image (Recommended):**\n• Visit: https://www.kali.org/get-kali/#kali-virtual-machines\n• Download Kali Linux VirtualBox 64-bit (OVA)\n• Size: ~3.5GB compressed\n• Username: kali, Password: kali\n\n**ISO Image for Custom Installation:**\n• Download Kali Linux 64-bit ISO\n• Size: ~4GB\n• Allows custom partitioning and configuration\n\n**Verification:**\nAlways verify SHA256 checksums to ensure integrity:\n```bash\nsha256sum kali-linux-2024.1-virtualbox-amd64.ova\n```"
            },
            {
              "id": "ova-import",
              "type": "text",
              "title": "Importing Kali Linux OVA",
              "content": "**Import Process:**\n\n1. **Open VirtualBox Manager**\n2. **File → Import Appliance**\n3. **Select Kali OVA file**\n4. **Review appliance settings:**\n   • Name: Kali-Linux-2024\n   • RAM: 2048MB (increase to 4GB if available)\n   • CPU: 2 cores\n   • Storage: 80GB dynamically allocated\n\n5. **Modify settings as needed:**\n   • Increase RAM for better performance\n   • Enable 3D acceleration\n   • Configure network adapters\n\n6. **Import and wait for completion**"
            },
            {
              "id": "vm-optimization",
              "type": "text",
              "title": "Kali VM Performance Optimization",
              "content": "**VM Settings Optimization:**\n\n**System Settings:**\n• RAM: 4GB minimum (8GB recommended)\n• CPU: 2-4 cores with PAE/NX enabled\n• Video Memory: 128MB with 3D acceleration\n• Chipset: ICH9 for better hardware compatibility\n\n**Display Settings:**\n• Enable 3D Acceleration for GUI performance\n• Increase Video Memory to 128MB\n• Scale Factor: 100% (adjust for high-DPI displays)\n\n**Storage Optimization:**\n• Use SSD storage for VM files\n• Enable host I/O cache\n• Consider fixed-size disks for better performance\n\n**Network Configuration:**\n• Use paravirtualized network adapter (virtio-net)\n• Configure multiple adapters for different lab networks\n• Enable cable connected for all adapters\n\n**Guest Additions Installation:**\n```bash\n# Update system first\nsudo apt update && sudo apt upgrade -y\n\n# Install Guest Additions dependencies\nsudo apt install -y dkms build-essential linux-headers-$(uname -r)\n\n# Insert Guest Additions CD and install\nsudo mount /dev/cdrom /mnt\nsudo /mnt/VBoxLinuxAdditions.run\nsudo reboot\n```"
            },
            {
              "id": "kali-network-config",
              "type": "text",
              "title": "Kali Linux Network Configuration",
              "content": "**Network Interface Management:**\n\n**Check Network Interfaces:**\n```bash\n# View all network interfaces\nip addr show\n\n# View routing table\nip route show\n\n# Check DNS configuration\ncat /etc/resolv.conf\n```\n\n**Configure Static IP:**\n```bash\n# Edit network configuration\nsudo nano /etc/network/interfaces\n\n# Add static configuration\nauto eth0\niface eth0 inet static\naddress 192.168.56.10\nnetmask 255.255.255.0\ngateway 192.168.56.1\ndns-nameservers 8.8.8.8 8.8.4.4\n```\n\n**Wireless Configuration:**\n```bash\n# Enable monitor mode for wireless testing\nsudo airmon-ng start wlan0\n\n# Check wireless interfaces\niwconfig\n\n# Scan for wireless networks\nsudo iwlist scan\n```\n\n**Network Service Management:**\n```bash\n# Restart networking service\nsudo systemctl restart networking\n\n# Enable NetworkManager\nsudo systemctl enable NetworkManager\nsudo systemctl start NetworkManager\n```"
            },
            {
              "id": "kali-tools-overview",
              "type": "image",
              "title": "Kali Linux Tool Categories",
              "content": "Kali Linux includes hundreds of security tools organized into categories. This comprehensive toolkit makes it the go-to distribution for penetration testers and security professionals worldwide.",
              "imageUrl": "https://images.unsplash.com/photo-1555066931-4365d14bab8c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80",
              "imageAlt": "Computer screen showing cybersecurity tools and terminal commands"
            },
            {
              "id": "essential-kali-tools",
              "type": "text",
              "title": "Essential Kali Linux Tools",
              "content": "**Information Gathering:**\n\n• **Nmap**: Network discovery and port scanning\n• **Netdiscover**: ARP reconnaissance tool\n• **DNSrecon**: DNS enumeration and discovery\n• **theHarvester**: Email and subdomain gathering\n• **Maltego**: Link analysis and data mining\n• **Recon-ng**: Web reconnaissance framework\n\n**Vulnerability Analysis:**\n\n• **OpenVAS**: Comprehensive vulnerability scanner\n• **Nikto**: Web server vulnerability scanner\n• **SQLmap**: SQL injection testing tool\n• **Burp Suite**: Web application security testing\n• **OWASP ZAP**: Web application vulnerability scanner\n• **Lynis**: Security auditing and hardening\n\n**Exploitation Tools:**\n\n• **Metasploit Framework**: Exploitation development platform\n• **SET**: Social Engineering Toolkit\n• **BeEF**: Browser Exploitation Framework\n• **Armitage**: Graphical Metasploit interface\n• **Searchsploit**: Exploit database search\n• **MSFvenom**: Payload generator\n\n**Post-Exploitation:**\n\n• **Mimikatz**: Windows credential extraction\n• **PowerSploit**: PowerShell post-exploitation\n• **Empire**: PowerShell and Python post-exploitation\n• **CrackMapExec**: Network service enumeration\n• **BloodHound**: Active Directory enumeration\n• **Impacket**: Network protocol implementations\n\n**Password Attacks:**\n\n• **John the Ripper**: Password cracking\n• **Hashcat**: Advanced password recovery\n• **Hydra**: Network password cracking\n• **Medusa**: Parallel password cracker\n• **CeWL**: Custom wordlist generator\n• **Crunch**: Wordlist generator\n\n**Wireless Attacks:**\n\n• **Aircrack-ng**: Wireless network security testing\n• **Kismet**: Wireless network detector\n• **Reaver**: WPS attack tool\n• **Wifite**: Automated wireless attack tool\n• **Fern WiFi Cracker**: GUI wireless security testing\n• **Pixiewps**: WPS PIN recovery tool"
            },
            {
              "id": "kali-update-maintenance",
              "type": "command",
              "title": "Kali Linux Updates and Maintenance",
              "content": "# System Updates\n# Always update Kali regularly for latest tools and security patches\n\n# Update package lists\nsudo apt update\n\n# Upgrade all packages\nsudo apt upgrade -y\n\n# Full system upgrade (be careful)\nsudo apt full-upgrade -y\n\n# Clean package cache\nsudo apt autoremove -y\nsudo apt autoclean\n\n# Update specific tools\nsudo apt install --only-upgrade metasploit-framework\n\n# Verify tool versions\nnmap --version\nmetasploit-framework --version\n\n# Manual tool updates\n# Update Metasploit\nsudo msfupdate\n\n# Update searchsploit database\nsudo searchsploit -u\n\n# Update locate database\nsudo updatedb\n\n# Check system health\nsudo apt check\nsudo dpkg --configure -a",
              "copyable": true
            },
            {
              "id": "kali-customization",
              "type": "text",
              "title": "Kali Linux Customization and Hardening",
              "content": "**User Account Security:**\n\n**Change Default Password:**\n```bash\n# Change kali user password\npasswd\n\n# Create new user account\nsudo useradd -m -s /bin/bash newuser\nsudo passwd newuser\nsudo usermod -aG sudo newuser\n```\n\n**SSH Configuration:**\n```bash\n# Enable SSH service\nsudo systemctl enable ssh\nsudo systemctl start ssh\n\n# Configure SSH security\nsudo nano /etc/ssh/sshd_config\n# Change: PermitRootLogin no\n# Change: PasswordAuthentication no (after setting up keys)\n# Change: Port 2222 (non-standard port)\n\n# Generate SSH keys\nssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n```\n\n**Desktop Customization:**\n\n**XFCE Themes:**\n• Install additional themes and icons\n• Configure panel layout and shortcuts\n• Set up workspaces for different tasks\n• Customize terminal appearance\n\n**Useful Aliases:**\n```bash\n# Add to ~/.bashrc\nalias ll='ls -alF'\nalias la='ls -A'\nalias l='ls -CF'\nalias ..='cd ..'\nalias ...='cd ../..'\nalias grep='grep --color=auto'\nalias nmap='nmap --reason --open --stats-every 3m --max-retries 1 --max-scan-delay 20 --defeat-rst-ratelimit'\nalias netstat='netstat -antup'\nalias ps='ps auxf'\n```\n\n**Tool Organization:**\n```bash\n# Create organized directory structure\nmkdir -p ~/Tools/{Recon,Exploitation,Post-Exploitation,Wordlists,Scripts}\n\n# Download common wordlists\ncd ~/Tools/Wordlists\nwget https://github.com/danielmiessler/SecLists/archive/master.zip\nunzip master.zip\n```\n\n**Snapshot Management:**\n• Take snapshot after initial setup\n• Create snapshots before major tool installations\n• Regular snapshots before exercises\n• Document snapshot states and purposes"
            }
          ]
        },
        {
          "id": "windows-target-setup",
          "title": "Windows Target System Configuration",
          "description": "Setting up Windows virtual machines as realistic targets for penetration testing",
          "type": "hands-on",
          "estimatedTime": 60,
          "content": [
            {
              "id": "windows-overview",
              "type": "text",
              "title": "Windows Targets in Cybersecurity Labs",
              "content": "Windows systems represent the majority of enterprise endpoints, making Windows targets essential for realistic cybersecurity training. This lesson covers setting up various Windows versions as penetration testing targets.\n\n**Why Windows Targets:**\n• 70%+ of enterprise desktops run Windows\n• Rich attack surface with many services\n• Active Directory integration possibilities\n• Real-world vulnerability scenarios\n• PowerShell and WMI attack vectors\n• Legacy system simulation capabilities\n\n**Windows Versions for Labs:**\n\n**Windows 10/11 (Client Systems):**\n• Modern endpoint security features\n• Windows Defender integration\n• PowerShell 5.0+ capabilities\n• WSL and container support\n• Ideal for: Modern attack techniques\n\n**Windows Server 2019/2022:**\n• Enterprise server features\n• Active Directory capabilities\n• IIS web server\n• SMB file sharing\n• Ideal for: Infrastructure attacks\n\n**Windows 7 (Legacy Testing):**\n• Older security model\n• Legacy applications\n• Known vulnerabilities\n• Ideal for: Historical attack methods"
            },
            {
              "id": "windows-licensing",
              "type": "info",
              "title": "Windows Evaluation Licensing",
              "content": "**Legal Windows Images:**\n\n**Microsoft Evaluation Center:**\nURL: https://www.microsoft.com/en-us/evalcenter/\n\n**Available Evaluations:**\n• Windows 10 Enterprise (90-day trial)\n• Windows 11 Enterprise (90-day trial)\n• Windows Server 2022 (180-day trial)\n• Windows Server 2019 (180-day trial)\n\n**VM Images from Microsoft:**\n• Pre-configured VirtualBox/VMware images\n• Developer-focused Windows 10/11 images\n• Includes Visual Studio and development tools\n• 90-day activation period\n\n**Important Notes:**\n• Evaluation licenses are free for testing\n• Cannot be used for production\n• VM images require periodic renewal\n• Some features may be limited\n\n**Alternative Options:**\n• Windows Insider Preview (free, ongoing updates)\n• Academic licensing (if student/educator)\n• MSDN subscriptions (for developers)\n• Volume licensing agreements (enterprise)"
            },
            {
              "id": "windows-vm-creation",
              "type": "text",
              "title": "Creating Windows Virtual Machines",
              "content": "**VM Configuration Settings:**\n\n**System Requirements:**\n• RAM: 4GB minimum (8GB recommended)\n• Storage: 60GB minimum (100GB recommended)\n• CPU: 2 cores minimum\n• Network: Multiple adapters for lab scenarios\n\n**VirtualBox Settings:**\n```\nGeneral:\n  Name: Windows-10-Target-01\n  Type: Microsoft Windows\n  Version: Windows 10 (64-bit)\n\nSystem:\n  Base Memory: 4096 MB\n  Processors: 2\n  Enable PAE/NX: Checked\n  Hardware Clock: UTC\n\nDisplay:\n  Video Memory: 128 MB\n  Graphics Controller: VBoxVGA\n  3D Acceleration: Enabled\n\nStorage:\n  Controller: SATA\n  Hard Disk: 60 GB (VDI, dynamically allocated)\n  Optical Drive: Windows ISO\n\nNetwork:\n  Adapter 1: Internal Network (LabNetwork)\n  Adapter 2: NAT (for updates)\n```\n\n**Installation Process:**\n1. Boot from Windows ISO\n2. Select custom installation\n3. Create single partition\n4. Install with local account (avoid Microsoft account)\n5. Disable privacy settings\n6. Skip Cortana and OneDrive setup\n7. Install VirtualBox Guest Additions\n8. Configure network settings"
            },
            {
              "id": "windows-vulnerability-setup",
              "type": "warning",
              "title": "Creating Vulnerable Windows Targets",
              "content": "**CAUTION**: Only perform these configurations in isolated lab environments!\n\n**Disable Security Features:**\n\n**Windows Defender:**\n```powershell\n# Disable real-time protection (PowerShell as Admin)\nSet-MpPreference -DisableRealtimeMonitoring $true\nSet-MpPreference -DisableBehaviorMonitoring $true\nSet-MpPreference -DisableBlockAtFirstSeen $true\nSet-MpPreference -DisableIOAVProtection $true\nSet-MpPreference -DisableScriptScanning $true\n\n# Disable Windows Defender service\nSet-Service -Name WinDefend -StartupType Disabled\n```\n\n**Windows Firewall:**\n```cmd\n# Disable Windows Firewall (Command Prompt as Admin)\nnetsh advfirewall set allprofiles state off\n```\n\n**User Account Control (UAC):**\n```cmd\n# Disable UAC through registry\nreg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v EnableLUA /t REG_DWORD /d 0 /f\n```\n\n**Enable Vulnerable Services:**\n\n**SMB v1 Protocol:**\n```powershell\n# Enable SMBv1 (vulnerable protocol)\nEnable-WindowsOptionalFeature -Online -FeatureName SMB1Protocol\n```\n\n**Install Vulnerable Software:**\n• Adobe Reader (older versions)\n• Java (outdated versions)\n• Internet Explorer with ActiveX\n• Unpatched applications\n• Development tools with weak configurations\n\n**Create Vulnerable Users:**\n```cmd\n# Create users with weak passwords\nnet user testuser Password123 /add\nnet user admin admin /add\nnet localgroup administrators admin /add\n```"
            },
            {
              "id": "windows-services-config",
              "type": "text",
              "title": "Windows Services Configuration for Testing",
              "content": "**Enable Common Network Services:**\n\n**File and Printer Sharing:**\n1. Control Panel → Network and Sharing Center\n2. Change advanced sharing settings\n3. Enable file and printer sharing\n4. Enable network discovery\n5. Turn off password protected sharing\n\n**Remote Desktop (RDP):**\n```cmd\n# Enable RDP through registry\nreg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f\n\n# Enable RDP through firewall\nnetsh advfirewall firewall set rule group=\"remote desktop\" new enable=Yes\n```\n\n**Internet Information Services (IIS):**\n1. Programs and Features → Turn Windows features on/off\n2. Enable Internet Information Services\n3. Include ASP.NET and CGI features\n4. Configure default website\n5. Enable directory browsing\n\n**SQL Server Express:**\n• Download and install SQL Server Express\n• Enable SQL Server Authentication\n• Create weak SA password\n• Enable TCP/IP protocol\n• Configure firewall rules\n\n**Telnet Service:**\n```cmd\n# Install and enable Telnet server\ndism /online /Enable-Feature /FeatureName:TelnetServer\nsc config tlntsvr start= auto\nnet start telnet\n\n# Create telnet users\ntlntadmn -u testuser -c\n```\n\n**SNMP Service:**\n1. Install SNMP feature\n2. Configure community strings (public/private)\n3. Set security options to accept from any host\n4. Enable SNMP traps"
            },
            {
              "id": "windows-active-directory",
              "type": "text",
              "title": "Active Directory Lab Setup",
              "content": "**Domain Controller Configuration:**\n\n**Promote Server to Domain Controller:**\n1. Install Active Directory Domain Services role\n2. Run Active Directory Domain Services Configuration Wizard\n3. Create new forest: testlab.local\n4. Set Forest/Domain functional level\n5. Configure DNS server role\n6. Set DSRM password\n7. Complete installation and restart\n\n**PowerShell Domain Controller Setup:**\n```powershell\n# Install AD DS role\nInstall-WindowsFeature -Name AD-Domain-Services -IncludeManagementTools\n\n# Promote to domain controller\nInstall-ADDSForest `\n  -DomainName \"testlab.local\" `\n  -DomainNetbiosName \"TESTLAB\" `\n  -ForestMode \"WinThreshold\" `\n  -DomainMode \"WinThreshold\" `\n  -InstallDns:$true `\n  -SafeModeAdministratorPassword (ConvertTo-SecureString \"P@ssw0rd123\" -AsPlainText -Force) `\n  -Force:$true\n```\n\n**Create Lab Users and Groups:**\n```powershell\n# Create Organizational Units\nNew-ADOrganizationalUnit -Name \"Lab Users\" -Path \"DC=testlab,DC=local\"\nNew-ADOrganizationalUnit -Name \"Lab Computers\" -Path \"DC=testlab,DC=local\"\nNew-ADOrganizationalUnit -Name \"Lab Servers\" -Path \"DC=testlab,DC=local\"\n\n# Create test users\nNew-ADUser -Name \"John Doe\" -SamAccountName \"jdoe\" -UserPrincipalName \"jdoe@testlab.local\" -Path \"OU=Lab Users,DC=testlab,DC=local\" -AccountPassword (ConvertTo-SecureString \"Password123\" -AsPlainText -Force) -Enabled $true\n\nNew-ADUser -Name \"Admin User\" -SamAccountName \"adm_jdoe\" -UserPrincipalName \"adm_jdoe@testlab.local\" -Path \"OU=Lab Users,DC=testlab,DC=local\" -AccountPassword (ConvertTo-SecureString \"AdminPass123\" -AsPlainText -Force) -Enabled $true\n\n# Add user to domain admins (vulnerable configuration)\nAdd-ADGroupMember -Identity \"Domain Admins\" -Members \"adm_jdoe\"\n\n# Create service account with SPN\nNew-ADUser -Name \"SQL Service\" -SamAccountName \"svc_sql\" -UserPrincipalName \"svc_sql@testlab.local\" -Path \"OU=Lab Users,DC=testlab,DC=local\" -AccountPassword (ConvertTo-SecureString \"ServicePass123\" -AsPlainText -Force) -Enabled $true\n\nsetspn -A MSSQLSvc/sqlserver.testlab.local:1433 svc_sql\n```\n\n**Configure Group Policy for Vulnerabilities:**\n1. Create Group Policy for weak password policy\n2. Enable WDigest credential caching\n3. Disable Windows Defender through GPO\n4. Configure autologon for service accounts\n5. Enable PowerShell logging for detection practice"
            }
          ]
        },
        {
          "id": "network-simulation",
          "title": "Network Infrastructure Simulation",
          "description": "Building realistic network environments with pfSense, switches, and monitoring systems",
          "type": "hands-on",
          "estimatedTime": 90,
          "content": [
            {
              "id": "network-design-principles",
              "type": "text",
              "title": "Network Design Principles for Security Labs",
              "content": "**Enterprise Network Simulation:**\n\nA realistic cybersecurity lab must simulate enterprise network architecture including:\n\n**Network Segmentation:**\n• DMZ for public-facing services\n• Internal LAN for workstations\n• Server VLAN for critical systems\n• Management network for administrative access\n• Guest network for untrusted devices\n\n**Security Zones:**\n\n**Internet Zone (Untrusted):**\n• External attackers\n• Public websites and services\n• Threat simulation systems\n\n**DMZ (Semi-trusted):**\n• Web servers\n• Email servers\n• DNS servers\n• Public-facing applications\n\n**Internal LAN (Trusted):**\n• Employee workstations\n• File servers\n• Print servers\n• Internal applications\n\n**Management Network (Highly Trusted):**\n• Network equipment management\n• Security appliances\n• Monitoring systems\n• Administrative workstations\n\n**Network Services:**\n• DHCP for automatic IP assignment\n• DNS for name resolution\n• NTP for time synchronization\n• RADIUS for authentication\n• SNMP for monitoring\n• Syslog for centralized logging"
            },
            {
              "id": "pfsense-overview",
              "type": "image",
              "title": "pfSense Firewall Architecture",
              "content": "pfSense is an open-source firewall and routing platform that provides enterprise-grade network security features. It serves as the foundation for realistic network security labs.",
              "imageUrl": "https://images.unsplash.com/photo-1544197150-b99a580bb7a8?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80",
              "imageAlt": "Network infrastructure showing routers, switches, and security appliances"
            },
            {
              "id": "pfsense-installation",
              "type": "text",
              "title": "pfSense Installation and Initial Configuration",
              "content": "**pfSense VM Requirements:**\n\n**System Specifications:**\n• RAM: 1GB minimum (2GB recommended)\n• Storage: 8GB minimum (16GB recommended)\n• CPU: 1 core minimum (2 cores for high throughput)\n• Network Adapters: Minimum 2 (WAN + LAN)\n\n**VM Configuration:**\n```\nGeneral:\n  Name: pfSense-Firewall\n  Type: FreeBSD\n  Version: FreeBSD (64-bit)\n\nSystem:\n  Base Memory: 2048 MB\n  Processors: 2\n  Boot Order: Hard Disk, Optical\n\nNetwork:\n  Adapter 1: NAT (WAN interface)\n  Adapter 2: Internal Network \"LAN_Network\"\n  Adapter 3: Internal Network \"DMZ_Network\"\n  Adapter 4: Internal Network \"MGMT_Network\"\n```\n\n**Installation Process:**\n1. Download pfSense CE ISO from pfsense.org\n2. Boot VM from ISO\n3. Select \"Install pfSense\"\n4. Accept default settings\n5. Select installation drive\n6. Reboot after installation\n\n**Initial Configuration:**\n1. Assign interfaces (WAN, LAN, DMZ, MGMT)\n2. Configure WAN interface (DHCP or static)\n3. Configure LAN interface (192.168.1.1/24)\n4. Set admin password\n5. Access web interface (https://192.168.1.1)\n\n**Web Interface Setup:**\n1. Complete setup wizard\n2. Configure timezone and hostname\n3. Set DNS servers (8.8.8.8, 1.1.1.1)\n4. Update to latest version\n5. Configure interface assignments"
            },
            {
              "id": "vlan-configuration",
              "type": "text",
              "title": "VLAN Configuration and Network Segmentation",
              "content": "**VLAN Design for Security Labs:**\n\n**VLAN Assignments:**\n```\nVLAN 10 - Management (10.0.10.0/24)\n├── pfSense management interface\n├── Switch management\n└── Security appliances\n\nVLAN 20 - Internal LAN (10.0.20.0/24)\n├── Windows workstations\n├── Linux workstations\n└── File servers\n\nVLAN 30 - DMZ (10.0.30.0/24)\n├── Web servers\n├── Email servers\n└── DNS servers\n\nVLAN 40 - Servers (10.0.40.0/24)\n├── Domain controllers\n├── Database servers\n└── Application servers\n\nVLAN 50 - Security Lab (10.0.50.0/24)\n├── Kali Linux\n├── Vulnerable VMs\n└── Testing systems\n\nVLAN 99 - Isolated/Quarantine (10.0.99.0/24)\n├── Malware analysis\n├── Suspicious systems\n└── Incident response\n```\n\n**pfSense VLAN Configuration:**\n1. **Interfaces → Assignments → VLANs**\n2. **Add VLAN for each network segment**\n3. **Configure VLAN interface settings:**\n   - IPv4 Configuration: Static IPv4\n   - IPv4 Address: Gateway IP for each VLAN\n   - IPv4 Upstream gateway: None\n\n**DHCP Configuration per VLAN:**\n1. **Services → DHCP Server**\n2. **Enable DHCP for each VLAN interface**\n3. **Configure IP ranges:**\n   - Management: 10.0.10.100-10.0.10.199\n   - LAN: 10.0.20.100-10.0.20.199\n   - DMZ: 10.0.30.100-10.0.30.199\n   - Servers: 10.0.40.100-10.0.40.199\n   - Security Lab: 10.0.50.100-10.0.50.199\n\n**Inter-VLAN Routing Rules:**\n• Allow Management to all VLANs\n• Block Security Lab from production VLANs\n• Allow LAN to Servers with restrictions\n• Block DMZ to internal networks\n• Log all inter-VLAN traffic"
            },
            {
              "id": "firewall-rules-config",
              "type": "text",
              "title": "Advanced Firewall Rules and Security Policies",
              "content": "**Firewall Rule Categories:**\n\n**1. Interface-Based Rules:**\nRules applied to traffic entering specific interfaces\n\n**2. Floating Rules:**\nRules processed before interface rules, useful for:\n• Traffic shaping\n• Connection limiting\n• Global security policies\n\n**3. NAT Rules:**\n• Port forwarding for services\n• Outbound NAT configuration\n• 1:1 NAT for server publishing\n\n**Essential Security Rules:**\n\n**WAN Interface Rules:**\n```\n# Block all inbound traffic by default\nAction: Block\nInterface: WAN\nProtocol: Any\nSource: Any\nDestination: Any\nDescription: Default deny inbound\n\n# Allow specific services only\nAction: Pass\nInterface: WAN\nProtocol: TCP\nSource: Any\nDestination: DMZ_Servers\nDestination Port: 80,443\nDescription: Allow HTTP/HTTPS to web servers\n```\n\n**LAN Interface Rules:**\n```\n# Allow LAN to internet\nAction: Pass\nInterface: LAN\nProtocol: Any\nSource: LAN subnets\nDestination: Any\nDescription: LAN internet access\n\n# Block LAN to Security Lab\nAction: Block\nInterface: LAN\nProtocol: Any\nSource: LAN subnets\nDestination: Security_Lab_VLAN\nDescription: Isolate security lab\n```\n\n**Security Lab Rules:**\n```\n# Allow Security Lab to targets only\nAction: Pass\nInterface: SECURITY_LAB\nProtocol: Any\nSource: Security_Lab_VLAN\nDestination: Vulnerable_VMs\nDescription: Allow pentesting traffic\n\n# Block Security Lab to production\nAction: Block\nInterface: SECURITY_LAB\nProtocol: Any\nSource: Security_Lab_VLAN\nDestination: Production_VLANs\nDescription: Protect production systems\n```\n\n**Advanced Rule Features:**\n\n**Traffic Shaping:**\n• Bandwidth limiting per VLAN\n• QoS for critical services\n• Connection rate limiting\n\n**Logging and Monitoring:**\n• Enable logging for security rules\n• Configure syslog forwarding\n• Set up traffic analysis\n\n**Intrusion Detection:**\n• Enable Suricata IDS/IPS\n• Configure rule categories\n• Set up alerting and blocking"
            },
            {
              "id": "dns-dhcp-services",
              "type": "text",
              "title": "DNS and DHCP Services Configuration",
              "content": "**DNS Configuration:**\n\n**DNS Resolver (Unbound):**\n1. **Services → DNS Resolver**\n2. **Enable DNS Resolver**\n3. **Configure interfaces:**\n   - Listen on all available interfaces\n   - Enable DNSSEC support\n   - Configure forwarders (1.1.1.1, 8.8.8.8)\n\n**Custom DNS Entries:**\n```\n# Host Overrides for lab systems\nHostname: dc01\nDomain: testlab.local\nIP Address: 10.0.40.10\nDescription: Domain Controller\n\nHostname: web01\nDomain: testlab.local\nIP Address: 10.0.30.10\nDescription: Web Server\n\nHostname: kali\nDomain: testlab.local\nIP Address: 10.0.50.10\nDescription: Kali Linux\n```\n\n**Domain Overrides:**\n```\n# Route specific domains to internal DNS\nDomain: testlab.local\nIP Address: 10.0.40.10\nDescription: Internal domain controller\n```\n\n**DHCP Server Configuration:**\n\n**Per-VLAN DHCP Settings:**\n\n**Management VLAN:**\n```\nRange: 10.0.10.100 - 10.0.10.199\nSubnet Mask: 255.255.255.0\nGateway: 10.0.10.1\nDNS Servers: 10.0.10.1, 8.8.8.8\nDomain Name: mgmt.testlab.local\nLease Time: 7200 seconds\n```\n\n**LAN VLAN:**\n```\nRange: 10.0.20.100 - 10.0.20.199\nSubnet Mask: 255.255.255.0\nGateway: 10.0.20.1\nDNS Servers: 10.0.40.10, 10.0.20.1\nDomain Name: testlab.local\nLease Time: 86400 seconds\nNTP Servers: 10.0.20.1\n```\n\n**Static DHCP Mappings:**\n```\n# Critical servers get static IPs\nMAC Address: 08:00:27:xx:xx:xx\nIP Address: 10.0.40.10\nHostname: dc01\nDescription: Domain Controller\n\nMAC Address: 08:00:27:xx:xx:xx\nIP Address: 10.0.30.10\nHostname: web01\nDescription: Web Server\n```\n\n**DHCP Options:**\n• Option 42 (NTP Servers): 10.0.10.1\n• Option 6 (DNS Servers): Custom per VLAN\n• Option 15 (Domain Name): testlab.local\n• Option 44 (WINS Servers): 10.0.40.10"
            }
          ]
        }
      ]
    }
  ]
}
